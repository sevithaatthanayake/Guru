<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANwAAADlCAMAAAAP8WnWAAAABGdBTUEAALGPC/xhBQAAAGNQTFRF/v7+
        QafvMqPuxuH5jsb0PKXvQafu7PX9MaLuQKbv/P7++fz+t9v4K6HuYLTxt9n3WLHxm8728/n9a7jygsL0
        5PL81+v73u78yuX51On7cbzzrdf4Ta3wvt/5otL2i8j1lMr1jGDeEwAABlpJREFUeF7tnemW6ioQRjvY
        EDCSkzkxJtH3f8pLIvZ41Awgxbm112p/dCvm66KoYn5DEARBEAR5RFjt/mh2Val/6T/78k+RUCnJB5IH
        SXGo9d/9JeuLQBIqgiAYfxRsehWUyKDoM/02z9iPL8eCcq3pLwgqaXGc3ji9+ER2iiXVOu5CZXzwz3zR
        qXtgtBuqjgrenSL9IU/okxnSNIInvf6YD5QF0Q8+D8oLb6LDgS3TNrYt7KA/DJvovFRawFggyLsHnlcm
        i7VdoQn4qlnRKWKvgYpKFwKUg1wrTSEkaMc7yFt+tQrQ6kZt24Cr7sBv2fFaBFjb9Vw/4hYEB5mtHLea
        7YpgR10gIMLuaRdgHrQLdZFgiHJD2lQqlkPLVVLVCzBSLRXkogsFQrMy5/o7ZKeLBUHWmbLahOgg9c6X
        dwQew8+6YAAcTUS4b3A4ObSxlvIDGkMZEOs3p5S/AZOoJEZbkysi0YU7ppEbejl34TDCgXmPG6GxLt4p
        tQWPG5EQZkouhmPcDfquv8AheyaEDZ9Tmar7aLCzZDgQGWZhpTkZoe5zMLMp81dE57pe1tYMxwLqur08
        GM+ZPyGuR8LO1iwHwOliay4XMOE4STHcBf8Kc94hr/WTWMLtpFZl0eWU07ntjx+s5ScjjptLm5HAubjB
        arUkg/4aN9gMc84DHYpbjeP+6pla6ahqnIvTz2EFx9UytRrnaKq/xg3/dJw7EJs+51jccfViqDlQt3P/
        tU1tgXA7zmCxPwdggtViTzxw3RO3Guicj6HY7NA5H/2y2RV3Pm5pdcRZf4U7TK/S+EAAmMNqSCDsGI83
        +ivcEY0DjPpxjCICAOvbbAUDCDOrb5WlOXEYi4hiC6ZjQFYzvDXzN1wtAEBzMmHDdEAMN5pOP5FBJBDD
        WVhDJGiui3ZPZX69JaCN1infsoXnN8TtsNd3IlObCq7QDtTi++OYPhvLMR0PDP1imNRdn20r5KQLhcLe
        3DIpWoDb8J+ZCuU0Brjlv5z65JtrJu1A7sutmdjepIgOUIT7isqgt4oTBEza9ZNmy17jEQEnpfxNycZW
        ZXWyQhnoffDlllQFuLZxB+TqoT4Obsfjby5EOd5y3xPjfkf4x/X0k+MthHaeHPgSFnzJVgP1XkEKcFuM
        79J3Y92ciRDEq3N63rIhmDsmJngw+HaAVJiyOdYThKX+1MhPslMiJ313/U9QHp98s9oHdZpwcqftpIR3
        F6BZ8lyqU8slJ+SWUysz0ukwwfbkuTJNuRsueUJVj0hBk/wy9OAPU0IQBEEQBEEQBEEQBEEQ5N9mH0VZ
        +IUsiuBPMz5mn4Vl0w9pUcRxnFzHm68kcZwXRTr0TRlmvsmMwqpJizxhgnNCFT9W34zjzgpCeMCSvEj7
        KvTgsgKlq9wNRcLUg0+Snk+wKpnqvV3SprsSssKsGdouUI+q7LRwLdFkx6BrhwbiZF24S+NJl7LFslU2
        X/4LQilkyXkHSeC+SWOqnGuZse4ghPoXJZcGRBUtD60SZkTXFVUUE5TT/OTYgHUaS0LNrkxXTHWbctml
        rjYr7eu0k1Y3+CsfHPW9PBDuq1TP5tuGyiStXumA4XRBmenK+HdUVKEyHl40f571bcANLdaeh9JHaPuC
        q9yq9+61ym5Q0r3b20uh/Do65OsvTNqMCoD2buIbFzyNdcQdjHJ2sRH96nPwktbxCYKK1nTjUrdGs5BN
        UG5UXtg+v5rylVBpTF52ubc2zR2Uv5vwvf2JWT3+ai2cbd+IVuVbd3nYQvB4W9yLUgquRn4iaLoh6axz
        kDXyE5KvbliuGwSA1kqVtqsnW32F6Xi9FXgEWXPEVNTaOn/HMKRd7HhRPLqbD6YLaLxQXZQAbiV/QpJF
        6rzSppqVRersXLVjD7LgEI4z8PD2Gz77NKae+NCSfIfM3MdVMu+kqUZz5n7Xgrxo1M4opNCP/5DdOAPl
        o7oZFTOycRbUK5gTy1Vr4ikzLhv0LcR98vzEqdpbwymve9a5m47b8ZRnF1Ps/a2VY718PJUX6vf5CXs8
        3NdIH0PcjScnK548djnldI+HMm3dTvkanlxE/u61uCfH0PotjqA4T0FxvoLifAXF+QqK8xUU5ysozldQ
        nK+gOF9Bcb6C4nzlfy1OEo+Rjyf9q53XgLgbDEEQBEEQBEEQBEEQBEEQBEEQGLy9/Qc1/H+0JG5CswAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>